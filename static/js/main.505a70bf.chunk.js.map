{"version":3,"sources":["components/SearchInput.js","components/TableContainer.js","App.js","utils/API.js","reportWebVitals.js","index.js"],"names":["SearchInput","users","updateUsers","useState","inputValue","updateInput","useEffect","filteredUsers","filter","name","first","toLowerCase","indexOf","className","placeholder","value","onChange","e","target","Table","sortedUsers","updateSortedUsers","scope","map","thumbnail","picture","last","gender","phone","email","age","dob","location","state","country","postcode","src","alt","App","initialUsers","updateAvailableUsers","usersToRender","updateUsersToRender","axios","get","then","results","data","aria-hidden","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAmBeA,EAjBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACZC,mBAAS,IADG,mBACvCC,EADuC,KAC3BC,EAD2B,KAY9C,OATAC,qBAAU,WACR,IAAMC,EACW,KAAfH,EAAoBH,EAAOA,EAAMO,QAAO,qBAAGC,KAAQC,MACrCC,cAAcC,QAAQR,EAAWO,gBAAkB,KAGnET,EAAYK,KACX,CAACH,EAAYH,IAGd,uBAAOY,UAAU,yBAAyBC,YAAY,yBAAyBC,MAAOX,EAAYY,SAAU,SAAAC,GAAC,OAAIZ,EAAYY,EAAEC,OAAOH,WCyC3HI,EAtDD,SAAC,GAAe,IAAblB,EAAY,EAAZA,MAAY,EACcE,mBAAS,IADvB,mBACpBiB,EADoB,KACPC,EADO,KAM3B,OAHAf,qBAAU,kBAAMe,EAAkBpB,KAAQ,CAACA,IAIzC,8BAEE,wBAAOY,UAAU,oBAAjB,UACE,gCACE,+BACE,oBAAIS,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCAEGF,EAAYG,KACX,gBACaC,EADb,EACEC,QAAWD,UADb,IAEEf,KAAQC,EAFV,EAEUA,MAAOgB,EAFjB,EAEiBA,KACfC,EAHF,EAGEA,OACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,MACKC,EANP,EAMEC,IAAKD,IANP,IAOEE,SAAaC,EAPf,EAOeA,MAAOC,EAPtB,EAOsBA,QAASC,EAP/B,EAO+BA,SAP/B,OASE,+BACE,6BAAI,qBAAKC,IAAKZ,EAAWa,IAAI,OAC7B,+BAAK3B,EAAL,IAAagB,KACb,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKG,IACL,6BAAKC,IACL,6BAAKC,MATEN,c,uBCXRS,MApBf,WAAgB,IAAD,EACgCnC,mBAAS,IADzC,mBACNoC,EADM,KACQC,EADR,OAEgCrC,mBAAS,IAFzC,mBAENsC,EAFM,KAESC,EAFT,KASb,OAJApC,qBAAU,WCRHqC,IAAMC,IAAI,iDDSJC,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BN,EAAqBM,QAC/D,IAGD,sBAAKjC,UAAU,MAAf,UACE,sBAAKA,UAAU,qBAAf,UACA,+BAAI,mBAAGA,UAAU,qBAAqBmC,cAAY,SAAlD,yBACA,cAAC,EAAD,CAAa/C,MAAOsC,EAAcrC,YAAawC,OAE/C,cAAC,EAAD,CAAOzC,MAAOwC,QETLQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.505a70bf.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst SearchInput = ({ users, updateUsers }) => {\n  const [inputValue, updateInput] = useState(\"\");\n\n  useEffect(() => {\n    const filteredUsers =\n      inputValue === \"\" ? users: users.filter(({ name: { first } }) =>\n              first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n          );\n\n    updateUsers(filteredUsers); // eslint-disable-next-line\n  }, [inputValue, users]);\n\n  return (\n    <input className=\"search-bar text-center\" placeholder=\"Start Your Search Here\" value={inputValue} onChange={e => updateInput(e.target.value)} />\n  );\n};\n\nexport default SearchInput;\n","import React, { useState, useEffect } from \"react\";\n\nconst Table = ({ users }) => {\n  const [sortedUsers, updateSortedUsers] = useState([]);\n\n  useEffect(() => updateSortedUsers(users), [users]);\n  \n\n  return (\n    <div>\n      {/* Top Column */}\n      <table className=\"table text-center\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Picture</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Gender</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">E-mail</th>\n            <th scope=\"col\">Age</th>\n            <th scope=\"col\">State</th>\n            <th scope=\"col\">Country</th>\n            <th scope=\"col\">ZipCode</th> \n          </tr>\n        </thead>\n        <tbody>\n          {/* Data to Show on Columns */}\n          {sortedUsers.map(\n            ({\n              picture: { thumbnail },\n              name: { first, last },\n              gender,\n              phone,\n              email,\n              dob:{age},\n              location: {  state, country, postcode }\n            }) => (\n              <tr key={email}>\n                <td><img src={thumbnail} alt=\"\"/></td>\n                <th>{first} {last}</th>\n                <td>{gender}</td>\n                <td>{phone}</td>\n                <td>{email}</td>\n                <td>{age}</td>\n                <td>{state}</td>\n                <td>{country}</td>\n                <td>{postcode}</td>\n              </tr>\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport SearchInput from \"./components/SearchInput\";\nimport Table from \"./components/TableContainer\";\nimport {getUsers} from \"./utils/API\";\nimport \"./App.css\";\n\nfunction App() {\n  const [initialUsers, updateAvailableUsers] = useState([]);\n  const [usersToRender, updateUsersToRender] = useState([]);\n\n\n  useEffect(() => {\n    getUsers().then(({ data: { results } }) => updateAvailableUsers(results));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"banner text-center\">\n      <h1><i className=\"fa fa-address-book\" aria-hidden=\"true\" /> Employee Directory</h1>\n      <SearchInput users={initialUsers} updateUsers={updateUsersToRender} />\n      </div>\n      <Table users={usersToRender} />\n    </div>\n  );\n}\n\nexport default App;\n\n","import axios from \"axios\";\n\nexport const getUsers = function() {\n  return axios.get(\"https://randomuser.me/api/?results=500&nat=us\");\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}